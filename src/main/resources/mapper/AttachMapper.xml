<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hq.dao.AttachMapper">

  <sql id="BASE_TABLE">
    t_attach
  </sql>

  <sql id="BASE_COLUMN">
    aa.id,aa.fname,aa.ftype,aa.fkey,aa.creatorId,aa.createTime>
  </sql>

  <!-- 关联查询的用户表需要的字段 -->
  <sql id="REL_USER_COLUMN">
    u.username,
  </sql>

  <sql id="TABLE_USER">
    <include refid="com.hq.dao.UserMapper.BASE_TABLE"></include>
  </sql>

  <resultMap id="BaseResultMap" type="com.hq.model.Attach">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="fname" jdbcType="VARCHAR" property="fname" />
    <result column="ftype" jdbcType="VARCHAR" property="ftype" />
    <result column="creatorId" jdbcType="INTEGER" property="creatorId" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="fkey" jdbcType="LONGVARCHAR" property="fkey" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_attach
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hq.model.Attach">
    insert into t_attach (id, fname, ftype, 
      creatorId, createTime, fkey
      )
    values (#{id,jdbcType=INTEGER}, #{fname,jdbcType=VARCHAR}, #{ftype,jdbcType=VARCHAR}, 
      #{creatorid,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{fkey,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.hq.model.Attach">
    update t_attach
    set fname = #{fname,jdbcType=VARCHAR},
      ftype = #{ftype,jdbcType=VARCHAR},
      creatorId = #{creatorid,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      fkey = #{fkey,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, fname, ftype, creatorId, createTime, fkey
    from t_attach
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, fname, ftype, creatorId, createTime, fkey
    from t_attach
  </select>

  <select id="getAttachCount" resultType="java.lang.Long">
    SELECT count(1) FROM
    <include refid="BASE_TABLE"/>
  </select>

  <insert id="addAttAch" parameterType="com.hq.model.Attach">
    INSERT INTO
    <include refid="BASE_TABLE"/>
    <trim prefix="(" suffix=")" suffixOverrides=",">
      fname, ftype, fkey, creatorId, createTime,
    </trim>
    <trim  prefix="VALUES(" suffix=")" suffixOverrides=",">
      #{fname, jdbcType=VARCHAR}, #{ftype, jdbcType=VARCHAR}, #{fkey, jdbcType=VARCHAR}, #{creatorId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <!-- 批量新增附件 -->
  <insert id="batchAddAttAch" parameterType="list" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO
    <include refid="BASE_TABLE"/>
    <trim prefix="(" suffix=")" suffixOverrides=",">
      fname, ftype, fkey, authorId, createTime,
    </trim>
    VALUES
    <foreach collection="list" item="AttAchDomain" index="index" separator=",">
      (
      <trim suffix="" suffixOverrides=",">
        #{fname, jdbcType=VARCHAR}, #{ftype, jdbcType=VARCHAR}, #{authorId,jdbcType=INTEGER}, UNIX_TIMESTAMP(NOW()),
      </trim>
      )
    </foreach>
  </insert>

  <!-- 根据主键获取附件信息 -->
  <select id="getAttAchById" resultType="com.hq.dto.AttachDto">
    SELECT
    <trim suffix="" suffixOverrides=",">
      <include refid="BASE_COLUMN"/>
      <include refid="REL_USER_COLUMN"/>
    </trim>
    FROM
    <include refid="BASE_TABLE"/> AS aa
    LEFT JOIN <include refid="TABLE_USER"/> AS u
    ON aa.creatorId = u.uid
    WHERE aa.id = #{id, jdbcType=INTEGER}
  </select>

  <!-- 删除附件 -->
  <delete id="deleteAttAch">
    DELETE FROM
    <include refid="BASE_TABLE"/>
    WHERE
    id = #{id, jdbcType=INTEGER}
  </delete>

  <select id="getAtts" resultType="com.hq.dto.AttachDto">
    SELECT
    <trim suffix="" suffixOverrides=",">
      <include refid="BASE_COLUMN"/>
      <include refid="REL_USER_COLUMN"/>
    </trim>
    FROM
    <include refid="BASE_TABLE"/> AS aa
    LEFT JOIN <include refid="TABLE_USER"/> AS u
    ON aa.creatorId = u.uid
    ORDER BY aa.createTime DESC
  </select>
</mapper>